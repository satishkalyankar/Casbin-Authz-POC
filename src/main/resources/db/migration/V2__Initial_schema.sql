-- public.users table definition

-- Drop the table if it already exists
-- DROP TABLE public.users;

CREATE TABLE public.users
(
    id  INT8 GENERATED BY DEFAULT AS IDENTITY
        (INCREMENT BY 1
        MINVALUE 1
        MAXVALUE 9223372036854775807
        START 1
        CACHE 1
        NO CYCLE) NOT NULL,

    created_at TIMESTAMP(6) NOT NULL,
    created_by VARCHAR(255) NULL,
    updated_at TIMESTAMP(6) NULL,
    updated_by VARCHAR(255) NULL,
    email      VARCHAR(255) NOT NULL,
    first_name VARCHAR(255) NOT NULL,
    last_name  VARCHAR(255) NOT NULL,
    "password" VARCHAR(255) NOT NULL,
    phone      VARCHAR(255) NOT NULL,

    -- Unique constraint for email
    CONSTRAINT uk6dotkott2kjsp8vw4d0m25fb7 UNIQUE (email),

    -- Primary key constraint
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

-- public.user_roles table definition

-- Drop the table if it already exists
-- DROP TABLE public.user_roles;

CREATE TABLE public.user_roles
(
    user_id INT8 NOT NULL,  -- Foreign key to users table (user_id)
    roles   VARCHAR(255) NULL,  -- Role assigned to the user (e.g., USER, ADMIN, SUPER_ADMIN)

    -- Check constraint to ensure that only valid roles are stored
    CONSTRAINT user_roles_roles_check CHECK (
        (roles)::TEXT = ANY (ARRAY['USER'::VARCHAR, 'ADMIN'::VARCHAR, 'SUPER_ADMIN'::VARCHAR]::TEXT[])
        ),

    -- Foreign key constraint linking user_id to the users table
    CONSTRAINT fkhfh9dx7w3ubf1co1vdev94g3f
        FOREIGN KEY (user_id)
            REFERENCES public.users(id)  -- Referencing the 'id' field in 'users' table
);
